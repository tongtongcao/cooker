#ifndef __TOF_M2__
#define __TOF_M2__

#include "TObject.h"
#include "Plugin.h"
#include "TTree.h"
#include <iostream>
#include "anaE36.h"
#include "cookedTof.h"
#include "TH1F.h"
#include "TH1D.h"
#include "TH2D.h"
#include "TF1.h"
#include "TCanvas.h"
#include <vector>
#include <cmath>
#include <iomanip>
#include <utility>
#include <fstream>
#include "TString.h"
#include "actree.h"
#include "actree.h"
#include "pgctree.h"
using namespace std;
class Tof_M2:public Plugin
{
   private:
CRTCaliPgC *treePgC;
PgcInfo *treeRaw; 
CRTCaliAc *treeAc;
  //AcInfo *treeRaw;                      /// Input tree with AC raw data
  BeamInfo* treeBeam;
  anaE36 *ptr;
  cookedTof* ptof = new cookedTof;
   public:
      Tof_M2(TTree *in, TTree *out,TFile *inf_, TFile * outf_, TObject *p);
      virtual ~Tof_M2();
      // add funtions with return value Long_t here:
      Long_t histos();
      Long_t startup();
      Long_t process();
      Long_t done();
   int gap_Num;
   double adc_ACu[12];
   double adc_ACd[12];
   TH1D* h1adc_ACu[12];
   TH1D* h1adc_ACd[12];

     double p_max, p_min;
    double u, d, AI, AO, BI, BO;
    double u0, d0, AIo, AOo, BIo, BOo;
    double off;
    double ADC_PgC[12];
    double ADC_PgCf;
   
     double pgc_ped[12][7];
   TH1D *h1adc_PgC[12];
  TH1D *ADC_PgCh[12][7];
  double chi_min=0.,chi_max = 10;
  TH1F *final_PgCAdc;
  TH1F *final_beta;
  TH1F *final_M2;
  TH1F *final_acAdc;
  TH1F *final_acAdcU;
  TH1F *final_acAdcD;
   
  double mean_a[12][36];
   double mean_b[12][36];

   double  time_tof1A[20], time_tof1B[20],path_tof1[20];
    double TOF_cal_A[30][20], TOF_cal_B[30][20],fTof2PathLocationA,fTof2PathLocationB;
  double delta_corr_A[30][30];
  double delta_corr_B[30][30];
  double beta_A[30][30];
  double beta_B[30][30];
  int ppndex = 0;
  int pndex = 0;
  int index = 0;
  Int_t c = 3e8;
  double fTof2TimeMeanA,fTof2TimeMeanB;
  Double_t fTof2TimeMeanA1[20],fTof1TimeMean;
  Double_t fTof2TimeMeanB1[20];
  Double_t fTof2PathTimeB,fTof2PathTimeA;
  Double_t fTof2PathTimeA1[20],fTof2PathTimeB1[20],fTof1PathTime1A[20],fTof1PathTime1B[20];
  
  double acAdcf=0.;
  double acAdcf1;
  double acAdcfU;
  double acAdcfD;
  double fTofbeta;
  double fTofM2;
  
  double sum_beta_A[12];
  double sum_beta_B[12];
  double sum_M2_A[12];
  double sum_M2_B[12];
  double F_beta;
  double F_M2;


    virtual Long_t cmdline(char * cmd);

      ClassDef(Tof_M2,1);
};

#endif
